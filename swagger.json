openapi: 3.0.3
info:
  title: Dvuln Organisation API
  description: API for managing projects, issues, and comments in Dvuln platform
  version: 1.0.0
servers:
  - url: https://{host}
    description: Dvuln API Server
    variables:
      host:
        default: console.dvuln.com
        description: The API host domain
security:
  - ApiKeyAuth: []
paths:
  /api/org/info:
    get:
      summary: Get Info (whoami)
      description: Retrieve information about the authenticated user/organization
      operationId: getInfo
      responses:
        '200':
          description: Successful response with user/organization information
          content:
            application/json:
              schema:
                type: object
                properties:
                  orgName:
                    type: string
                    description: The name of the organization
                    example: "Example Corporation Pty. Ltd."
        '403':
          description: Forbidden - Invalid or missing API key
        '500':
          description: Internal server error
  
  /api/org/projects:
    get:
      summary: Get Projects
      description: Retrieve a list of all projects in the organization
      operationId: getProjects
      responses:
        '200':
          description: Successful response with list of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Example Project"
                        shortcode:
                          type: string
                          example: "dvpt-abc-example"
                        url:
                          type: string
                          format: uri
                          example: "https://app.dvuln.com/project/dvpt-abc-example/overview"
                        level:
                          type: string
                          example: "1"
                        commsCount:
                          type: integer
                          example: 1
                        startDate:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-01 09:00:00.000000"
                            timezone_type:
                              type: integer
                              example: 3
                            timezone:
                              type: string
                              example: "Australia/Sydney"
                        startDateRaw:
                          type: string
                          example: "01-01-2024"
                        endDate:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-10 17:00:00.000000"
                            timezone_type:
                              type: integer
                              example: 3
                            timezone:
                              type: string
                              example: "Australia/Sydney"
                        endDateRaw:
                          type: string
                          example: "10-01-2024"
                        reportDeliveryDate:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-11 17:00:00.000000"
                            timezone_type:
                              type: integer
                              example: 3
                            timezone:
                              type: string
                              example: "Australia/Sydney"
                        reportDeliveryDateRaw:
                          type: string
                          example: "11-01-2024"
                        completionPercentage:
                          type: integer
                          minimum: 0
                          maximum: 100
                          example: 75
                        status:
                          type: object
                          properties:
                            ID:
                              type: string
                              example: "3"
                            name:
                              type: string
                              example: "Live"
                            description:
                              type: string
                              example: "Testing is currently in progress."
                        type:
                          type: object
                          properties:
                            ID:
                              type: string
                              example: "1"
                            code:
                              type: string
                              example: "dvpt"
                            name:
                              type: string
                              example: "Penetration Test"
                            sorting:
                              type: integer
                              nullable: true
                        scopeMarkdown:
                          type: string
                          example: "| Asset | Environment, Version |\r\n| --- | --- |\r\n| [https://example.com](https://example.com/) | Production v1.0.0 |"
                        scopeEditDate:
                          type: string
                          example: "1st Jan 2024 10:00 AM"
                        scopeEditUser:
                          type: object
                          properties:
                            displayName:
                              type: string
                              example: "john-doe"
                            firstName:
                              type: string
                              example: "John"
                            lastName:
                              type: string
                              example: "Doe"
                            fullName:
                              type: string
                              example: "John Doe"
                            profileImgUuid:
                              type: string
                              example: "a1b2c3d4e5f6g7h8i9j0"
                  count:
                    type: integer
                    description: Total number of projects
                    example: 1
        '403':
          description: Forbidden - Invalid or missing API key
        '500':
          description: Internal server error
  
  /api/org/projects/{shortcode}/findings:
    get:
      summary: Get Issues
      description: Retrieve all issues/findings for a specific project
      operationId: getIssues
      parameters:
        - name: shortcode
          in: path
          required: true
          description: Project shortcode identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful response with list of issues
          content:
            application/json:
              schema:
                type: object
                properties:
                  issues:
                    type: array
                    items:
                      type: object
                      properties:
                        ref:
                          type: string
                          example: "1"
                        shortcode:
                          type: string
                          example: "DVPT-ABC-EXAMPLE-1"
                        title:
                          type: string
                          example: "Cross-Site Scripting (XSS) Vulnerability"
                        severity:
                          type: string
                          enum: [critical, high, medium, low, informational]
                          example: "high"
                        severityNum:
                          type: integer
                          minimum: 1
                          maximum: 5
                          description: "Numeric severity (1=informational, 2=low, 3=medium, 4=high, 5=critical)"
                          example: 4
                        creator:
                          type: object
                          properties:
                            displayName:
                              type: string
                              example: "john-doe"
                            firstName:
                              type: string
                              example: "John"
                            lastName:
                              type: string
                              example: "Doe"
                            fullName:
                              type: string
                              example: "John Doe"
                            profileImgUuid:
                              type: string
                              example: "a1b2c3d4e5f6g7h8i9j0"
                        status:
                          type: object
                          properties:
                            ID:
                              type: string
                              example: "3"
                            name:
                              type: string
                              example: "Open"
                            showReportDetails:
                              type: string
                              example: "1"
                            description:
                              type: string
                              example: "Issue has been reviewed and details are available to the client."
                            canMoveToId:
                              type: string
                              nullable: true
                              example: "4"
                        updatedRaw:
                          type: string
                          nullable: true
                          description: "Unix timestamp of last update"
                          example: "1753081254"
                        updated:
                          type: string
                          description: "Human-readable update time"
                          example: "July 21, 2025 05:00 PM"
                        createdRaw:
                          type: string
                          nullable: true
                          description: "Unix timestamp of creation"
                          example: "1738120632"
                        created:
                          type: string
                          description: "Human-readable creation time"
                          example: "January 29, 2025 02:17 PM"
                        commentCount:
                          type: integer
                          minimum: 0
                          example: 2
                  count:
                    type: integer
                    description: "Total number of issues"
                    example: 33
                  ommitedByLimit:
                    type: integer
                    description: "Number of issues omitted due to limit"
                    example: 0
                  sorting:
                    type: string
                    nullable: true
                    description: "Current sorting applied"
        '403':
          description: Forbidden - Invalid or missing API key
        '404':
          description: Project not found
        '500':
          description: Internal server error
  
  /api/org/projects/{shortcode}/findings/{ref}:
    get:
      summary: Get Issue Details
      description: Retrieve detailed information about a specific issue/finding
      operationId: getIssueDetails
      parameters:
        - name: shortcode
          in: path
          required: true
          description: Project shortcode identifier
          schema:
            type: string
        - name: ref
          in: path
          required: true
          description: Issue/finding reference identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful response with issue details
          content:
            application/json:
              schema:
                type: object
                properties:
                  ref:
                    type: string
                    example: "1"
                  title:
                    type: string
                    example: "Cross-Site Scripting (XSS) Vulnerability"
                  shortcode:
                    type: string
                    example: "DVPT-ABC-EXAMPLE-1"
                  fromProject:
                    type: string
                    example: "Example Project Penetration Test"
                  dateReported:
                    type: string
                    example: "29 Jan 2025"
                  dateUpdated:
                    type: string
                    example: "Jul 21 05:00 PM"
                  severity:
                    type: string
                    enum: [critical, high, medium, low, informational]
                    example: "critical"
                  severityNum:
                    type: integer
                    minimum: 1
                    maximum: 5
                    description: "Numeric severity (1=informational, 2=low, 3=medium, 4=high, 5=critical)"
                    example: 5
                  creator:
                    type: object
                    properties:
                      displayName:
                        type: string
                        example: "john-doe"
                      firstName:
                        type: string
                        example: "John"
                      lastName:
                        type: string
                        example: "Doe"
                      fullName:
                        type: string
                        example: "John Doe"
                      profileImgUuid:
                        type: string
                        example: "a1b2c3d4e5f6g7h8i9j0"
                  reviewer:
                    type: string
                    example: "John Doe (john-doe)"
                  status:
                    type: object
                    properties:
                      ID:
                        type: string
                        example: "3"
                      name:
                        type: string
                        example: "Open"
                      showReportDetails:
                        type: string
                        example: "1"
                      description:
                        type: string
                        example: "Issue has been reviewed and details are available to the client."
                      canMoveToId:
                        type: string
                        nullable: true
                        example: "4"
                  commentCount:
                    type: integer
                    minimum: 0
                    example: 3
                  content:
                    type: string
                    description: "Markdown content describing the issue details including Description, Impact, Affected Assets, Remediation, and Testing Process"
                    example: "###### Description\n\nA detailed description of the vulnerability...\n\n###### Impact\n\nThe business impact..."
                  cvssVector:
                    type: string
                    example: "N/A"
                  cvssScore:
                    type: string
                    example: "N/A"
                  activity:
                    type: array
                    description: "Activity history including comments and status changes"
                    items:
                      type: object
                      properties:
                        who:
                          type: object
                          properties:
                            displayName:
                              type: string
                              example: "john-doe"
                            firstName:
                              type: string
                              example: "John"
                            lastName:
                              type: string
                              example: "Doe"
                            fullName:
                              type: string
                              example: "John Doe"
                            profileImgUuid:
                              type: string
                              nullable: true
                              example: "a1b2c3d4e5f6g7h8i9j0"
                        what:
                          type: string
                          description: "HTML formatted activity description"
                          example: "posted a comment<br><span class=\"text-muted\">This needs immediate attention</span>"
                        isComment:
                          type: boolean
                          example: true
                        date:
                          type: string
                          description: "Human-readable relative or absolute time"
                          example: "23 hours ago"
                        dateRaw:
                          type: string
                          description: "Unix timestamp"
                          example: "1753081254"
        '403':
          description: Forbidden - Invalid or missing API key
        '404':
          description: Issue not found
        '500':
          description: Internal server error
    
    post:
      summary: Update Issue
      description: Perform actions on an issue (add comment or change status)
      operationId: updateIssue
      parameters:
        - name: shortcode
          in: path
          required: true
          description: Project shortcode identifier
          schema:
            type: string
        - name: ref
          in: path
          required: true
          description: Issue/finding reference identifier
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: Comment Action
                  required:
                    - action
                    - comment
                  properties:
                    action:
                      type: string
                      enum: [comment]
                      description: Action type for adding a comment
                    comment:
                      type: string
                      description: The comment text to add
                - type: object
                  title: State Change Action
                  required:
                    - action
                    - state
                  properties:
                    action:
                      type: string
                      enum: [state_change]
                      description: Action type for changing issue state
                    state:
                      type: integer
                      description: |
                        The new state ID for the issue.
                        
                        Valid state IDs:
                        - 1: Draft - Issue has been created and awaiting details from the reporter
                        - 2: Awaiting Review - Issue has been finalised and is awaiting review from the project manager
                        - 3: Open - Issue has been reviewed and details are available to the client
                        - 4: Retest - Client has marked issue as resolved and has requested the issue to be retested
                        - 5: Accepted Risk - Client has marked the issue as an accepted risk
                        - 6: False Positive - Issue has been marked as a false-positive finding
                        - 7: Resolved - Issue has been retested and closed as resolved
                        
                        IMPORTANT: The API will only accept state IDs that are valid for the current issue status.
                        Valid transitions are specified in the issue's status.canMoveToId field (comma-separated).
                        For example, if canMoveToId is "4", only state 4 (Retest) will be accepted.
                        If canMoveToId is "4,5,6", states 4, 5, and 6 are valid transitions.
            examples:
              addComment:
                value:
                  action: comment
                  comment: "This is a test comment"
              changeState:
                value:
                  action: state_change
                  state: 3
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "OK"
        '400':
          description: Bad request - Invalid input
        '403':
          description: Forbidden - Invalid or missing API key
        '404':
          description: Issue not found
        '500':
          description: Internal server error

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Token
      description: API key for authentication